//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Virtualization::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Virtualization_VZPlatformConfiguration")]
    pub struct VZMacPlatformConfiguration;

    #[cfg(feature = "Virtualization_VZPlatformConfiguration")]
    unsafe impl ClassType for VZMacPlatformConfiguration {
        #[inherits(NSObject)]
        type Super = VZPlatformConfiguration;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(
    feature = "Foundation_NSObject",
    feature = "Virtualization_VZPlatformConfiguration"
))]
unsafe impl NSCopying for VZMacPlatformConfiguration {}

#[cfg(feature = "Virtualization_VZPlatformConfiguration")]
unsafe impl NSObjectProtocol for VZMacPlatformConfiguration {}

extern_methods!(
    #[cfg(feature = "Virtualization_VZPlatformConfiguration")]
    unsafe impl VZMacPlatformConfiguration {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(feature = "Virtualization_VZMacHardwareModel")]
        #[method_id(@__retain_semantics Other hardwareModel)]
        pub unsafe fn hardwareModel(&self) -> Id<VZMacHardwareModel>;

        #[cfg(feature = "Virtualization_VZMacHardwareModel")]
        #[method(setHardwareModel:)]
        pub unsafe fn setHardwareModel(&self, hardware_model: &VZMacHardwareModel);

        #[cfg(feature = "Virtualization_VZMacMachineIdentifier")]
        #[method_id(@__retain_semantics Other machineIdentifier)]
        pub unsafe fn machineIdentifier(&self) -> Id<VZMacMachineIdentifier>;

        #[cfg(feature = "Virtualization_VZMacMachineIdentifier")]
        #[method(setMachineIdentifier:)]
        pub unsafe fn setMachineIdentifier(&self, machine_identifier: &VZMacMachineIdentifier);

        #[cfg(feature = "Virtualization_VZMacAuxiliaryStorage")]
        #[method_id(@__retain_semantics Other auxiliaryStorage)]
        pub unsafe fn auxiliaryStorage(&self) -> Option<Id<VZMacAuxiliaryStorage>>;

        #[cfg(feature = "Virtualization_VZMacAuxiliaryStorage")]
        #[method(setAuxiliaryStorage:)]
        pub unsafe fn setAuxiliaryStorage(&self, auxiliary_storage: Option<&VZMacAuxiliaryStorage>);
    }
);

extern_methods!(
    /// Methods declared on superclass `VZPlatformConfiguration`
    #[cfg(feature = "Virtualization_VZPlatformConfiguration")]
    unsafe impl VZMacPlatformConfiguration {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
