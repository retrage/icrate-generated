//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Virtualization::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct VZGraphicsDisplay;

    unsafe impl ClassType for VZGraphicsDisplay {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for VZGraphicsDisplay {}

extern_methods!(
    unsafe impl VZGraphicsDisplay {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(feature = "Foundation_NSGeometry")]
        #[method(sizeInPixels)]
        pub unsafe fn sizeInPixels(&self) -> CGSize;

        #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSGeometry"))]
        #[method(reconfigureWithSizeInPixels:error:_)]
        pub unsafe fn reconfigureWithSizeInPixels_error(
            &self,
            size_in_pixels: CGSize,
        ) -> Result<(), Id<NSError>>;

        #[cfg(all(
            feature = "Foundation_NSError",
            feature = "Virtualization_VZGraphicsDisplayConfiguration"
        ))]
        #[method(reconfigureWithConfiguration:error:_)]
        pub unsafe fn reconfigureWithConfiguration_error(
            &self,
            configuration: &VZGraphicsDisplayConfiguration,
        ) -> Result<(), Id<NSError>>;

        #[method(addObserver:)]
        pub unsafe fn addObserver(&self, observer: &ProtocolObject<dyn VZGraphicsDisplayObserver>);

        #[method(removeObserver:)]
        pub unsafe fn removeObserver(
            &self,
            observer: &ProtocolObject<dyn VZGraphicsDisplayObserver>,
        );
    }
);

extern_protocol!(
    pub unsafe trait VZGraphicsDisplayObserver: NSObjectProtocol {
        #[optional]
        #[method(displayDidBeginReconfiguration:)]
        unsafe fn displayDidBeginReconfiguration(&self, display: &VZGraphicsDisplay);

        #[optional]
        #[method(displayDidEndReconfiguration:)]
        unsafe fn displayDidEndReconfiguration(&self, display: &VZGraphicsDisplay);
    }

    unsafe impl ProtocolType for dyn VZGraphicsDisplayObserver {}
);
