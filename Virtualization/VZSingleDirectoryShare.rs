//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Virtualization::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Virtualization_VZDirectoryShare")]
    pub struct VZSingleDirectoryShare;

    #[cfg(feature = "Virtualization_VZDirectoryShare")]
    unsafe impl ClassType for VZSingleDirectoryShare {
        #[inherits(NSObject)]
        type Super = VZDirectoryShare;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Virtualization_VZDirectoryShare")]
unsafe impl NSObjectProtocol for VZSingleDirectoryShare {}

extern_methods!(
    #[cfg(feature = "Virtualization_VZDirectoryShare")]
    unsafe impl VZSingleDirectoryShare {
        #[cfg(feature = "Virtualization_VZSharedDirectory")]
        #[method_id(@__retain_semantics Init initWithDirectory:)]
        pub unsafe fn initWithDirectory(
            this: Allocated<Self>,
            directory: &VZSharedDirectory,
        ) -> Id<Self>;

        #[cfg(feature = "Virtualization_VZSharedDirectory")]
        #[method_id(@__retain_semantics Other directory)]
        pub unsafe fn directory(&self) -> Id<VZSharedDirectory>;
    }
);

extern_methods!(
    /// Methods declared on superclass `VZDirectoryShare`
    #[cfg(feature = "Virtualization_VZDirectoryShare")]
    unsafe impl VZSingleDirectoryShare {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);
