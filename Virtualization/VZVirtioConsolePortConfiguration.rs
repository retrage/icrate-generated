//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Virtualization::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Virtualization_VZConsolePortConfiguration")]
    pub struct VZVirtioConsolePortConfiguration;

    #[cfg(feature = "Virtualization_VZConsolePortConfiguration")]
    unsafe impl ClassType for VZVirtioConsolePortConfiguration {
        #[inherits(NSObject)]
        type Super = VZConsolePortConfiguration;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(
    feature = "Foundation_NSObject",
    feature = "Virtualization_VZConsolePortConfiguration"
))]
unsafe impl NSCopying for VZVirtioConsolePortConfiguration {}

#[cfg(feature = "Virtualization_VZConsolePortConfiguration")]
unsafe impl NSObjectProtocol for VZVirtioConsolePortConfiguration {}

extern_methods!(
    #[cfg(feature = "Virtualization_VZConsolePortConfiguration")]
    unsafe impl VZVirtioConsolePortConfiguration {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Option<Id<NSString>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setName:)]
        pub unsafe fn setName(&self, name: Option<&NSString>);

        #[method(isConsole)]
        pub unsafe fn isConsole(&self) -> bool;

        #[method(setIsConsole:)]
        pub unsafe fn setIsConsole(&self, is_console: bool);
    }
);

extern_methods!(
    /// Methods declared on superclass `VZConsolePortConfiguration`
    #[cfg(feature = "Virtualization_VZConsolePortConfiguration")]
    unsafe impl VZVirtioConsolePortConfiguration {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
