//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Virtualization::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct VZMacOSRestoreImage;

    unsafe impl ClassType for VZMacOSRestoreImage {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for VZMacOSRestoreImage {}

extern_methods!(
    unsafe impl VZMacOSRestoreImage {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSURL"))]
        #[method(loadFileURL:completionHandler:)]
        pub unsafe fn loadFileURL_completionHandler(
            file_url: &NSURL,
            completion_handler: &Block<dyn Fn(*mut VZMacOSRestoreImage, *mut NSError)>,
        );

        #[cfg(feature = "Foundation_NSError")]
        #[method(fetchLatestSupportedWithCompletionHandler:)]
        pub unsafe fn fetchLatestSupportedWithCompletionHandler(
            completion_handler: &Block<dyn Fn(*mut VZMacOSRestoreImage, *mut NSError)>,
        );

        #[method(isSupported)]
        pub unsafe fn isSupported(&self) -> bool;

        #[cfg(feature = "Foundation_NSURL")]
        #[method_id(@__retain_semantics Other URL)]
        pub unsafe fn URL(&self) -> Id<NSURL>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other buildVersion)]
        pub unsafe fn buildVersion(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSProcessInfo")]
        #[method(operatingSystemVersion)]
        pub unsafe fn operatingSystemVersion(&self) -> NSOperatingSystemVersion;

        #[cfg(feature = "Virtualization_VZMacOSConfigurationRequirements")]
        #[method_id(@__retain_semantics Other mostFeaturefulSupportedConfiguration)]
        pub unsafe fn mostFeaturefulSupportedConfiguration(
            &self,
        ) -> Option<Id<VZMacOSConfigurationRequirements>>;
    }
);
