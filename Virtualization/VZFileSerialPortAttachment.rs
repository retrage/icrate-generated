//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::Foundation::*;
use crate::Virtualization::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Virtualization_VZSerialPortAttachment")]
    pub struct VZFileSerialPortAttachment;

    #[cfg(feature = "Virtualization_VZSerialPortAttachment")]
    unsafe impl ClassType for VZFileSerialPortAttachment {
        #[inherits(NSObject)]
        type Super = VZSerialPortAttachment;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Virtualization_VZSerialPortAttachment")]
unsafe impl NSObjectProtocol for VZFileSerialPortAttachment {}

extern_methods!(
    #[cfg(feature = "Virtualization_VZSerialPortAttachment")]
    unsafe impl VZFileSerialPortAttachment {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSError", feature = "Foundation_NSURL"))]
        #[method_id(@__retain_semantics Init initWithURL:append:error:_)]
        pub unsafe fn initWithURL_append_error(
            this: Allocated<Self>,
            url: &NSURL,
            should_append: bool,
        ) -> Result<Id<Self>, Id<NSError>>;

        #[cfg(feature = "Foundation_NSURL")]
        #[method_id(@__retain_semantics Other URL)]
        pub unsafe fn URL(&self) -> Id<NSURL>;

        #[method(append)]
        pub unsafe fn append(&self) -> bool;
    }
);
